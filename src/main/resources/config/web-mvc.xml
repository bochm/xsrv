<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="cn.bx.**.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    	<context:include-filter type="regex" expression=".*Controller"/>
    </context:component-scan>
    <!-- 注解映射 -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
    	<mvc:message-converters register-defaults="true">
			<!-- StringHttpMessageConverter的默认编码改为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false,使用自定义Jackson mapper -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                	<list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">
                    <bean class="cn.bx.bframe.json.JsonMapper"></bean>  
                </property> 
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
    
    <!-- 内容协商管理器  根据请求的path+参数 决定使用什么mediaTypes-->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <!-- 是否忽略Accept Header -->
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
        <!-- 默认的content type -->
        <property name="defaultContentType" value="application/json"/>
    </bean>
    <!-- 跨域访问  allowed-headers设置请求头中必须有的-->
   	<mvc:cors>
	    <mvc:mapping path="/**"
	        allowed-origins="http://localhost, http://localhost1"
	        allowed-methods="GET,POST" 
	        allowed-headers="rp_login, rp_token, header3"
	        exposed-headers="ssssr11, header2" 
	        allow-credentials="true"
	        max-age="1800"/>
    </mvc:cors>
</beans>