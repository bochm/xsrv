<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bx.demo.mapper.ClassesMapper"> 
	<!-- <resultMap id="classesMap" type="cn.bx.demo.entity.Classes">
		<id column="id" property="id"/>
		<result column="class_name" property="className"/>
		<result column="class_master" property="classMaster"/>
		<collection property="students" ofType="cn.bx.demo.entity.Student" javaType="list" notNullColumn="student_id">
			<id column="student_id" property="id"/>
			<result column="class_id" property="classId"/>
			<result column="student_name" property="name"/>
			<result column="student_age" property="age"/>
		</collection>
	</resultMap> -->
    <!-- <sql id="classesColumns">
    	a.id,a.class_name,a.class_master,b.id "student_id",a.id "class_id",b.name "student_name",b.age "student_age"
    </sql> -->
    <sql id="classesColumns">
    	a.id,a.class_name,a.class_master,b.student_count
    </sql>
    <sql id="joins">
    	left join (select class_id,count(id) student_count from test_student group by class_id) b on b.class_id = a.id
    </sql>
	<select id="listClasses" resultType="cn.bx.demo.entity.Classes">
		select <include refid="classesColumns"/> from test_classes a
		<include refid="joins"/>
		<trim prefix="where" prefixOverrides="and">
			<if test="className != null and className != ''">
			a.class_name = #{className}
			</if>
			<if test="classMaster != null and classMaster != ''">
			and a.class_master &lt; #{classMaster}
			</if>
		</trim>
	</select>
	<select id="listStudent" resultType="cn.bx.demo.entity.Student">
		select id,class_id,no,name,age from test_student
		<trim prefix="where" prefixOverrides="and">
		<if test="id != null and id != ''">
			id = #{id}
		</if>
		<if test="classId != null and classId != ''">
			and class_id = #{classId}
		</if>
		</trim>
	</select>
	<insert id="addClass">
		insert into test_classes(id, class_name,class_master) 
		values (#{id}, #{className},#{classMaster})
	</insert>
	<insert id="addStudents" parameterType="list">
		insert into test_student(id,class_id,no,name,age) values
		<foreach collection="list" item="item" separator=",">
		(#{item.id},#{item.classId},#{item.no},#{item.name},#{item.age})
	   </foreach> 
	</insert>
	
	<update id="updateClass">
		update test_classes set class_name = #{className}, class_master=#{classMaster}
		where id = #{id}
	</update>
	<update id="updateStudents">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">  
        update test_student
        <set>no=${item.no}</set>  
        <set>name=${item.name}</set>
        <set>age=${item.age}</set>  
        where id = ${item.id}  
        </foreach>  
	</update>
	
	<delete id="deleteClass">
		delete from test_classes where id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">#{id}</foreach>
	</delete>
	<delete id="deleteStudents">
		delete from test_student where class_id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">#{id}</foreach>
	</delete>
</mapper>